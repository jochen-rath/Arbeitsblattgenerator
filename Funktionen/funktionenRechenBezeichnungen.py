#!/usr/bin/env python
# coding: utf8

#Aufruf:
#       exec(open("Funktionen/funktionen.py").read())


def erzeuge10minRechnung(art,mitText=True,anzSpalten=2):
#Diese Funktion erzeugt eine Liste von verschiedenen Aufgaben. 
#Welche Aufgaben, ist in der Liste "art" angegeben.
#art = 'ggT','kgV','Basis','Kopf','erweitern','kuerzen'
#      'kuerzMit','reihe','reihePosZufaellig'
    rechnungsFunktionen={'ggT':'erzeugeGgt()','kgV':'erzeugeKgv()',
                          'Basis':'erzeugePlusMinusMalGeteiltAufgabe()','Kopf':'erzeugeKopfrechenAufgabe()',
                          'addSchriftLeicht':'erzeugeSchrAdditionsSubtraktionsRechnung(differenzierung=0,operator="+")',
                          'addSchrift':'erzeugeSchrAdditionsSubtraktionsRechnung(differenzierung=1,operator="+")',
                          'addSchriftSchwer':'erzeugeSchrAdditionsSubtraktionsRechnung(differenzierung=2,operator="+")',
                          'subSchriftLeicht':'erzeugeSchrAdditionsSubtraktionsRechnung(differenzierung=0,operator="-")',
                          'subSchrift':'erzeugeSchrAdditionsSubtraktionsRechnung(differenzierung=1,operator="-")',
                          'subSchriftSchwer':'erzeugeSchrAdditionsSubtraktionsRechnung(differenzierung=2,operator="-")',
                          'addSubSchriftLeicht':'erzeugeSchrAdditionsSubtraktionsRechnung(differenzierung=0,operator=random.choice(["-","+"]))',
                          'addSubSchrift':'erzeugeSchrAdditionsSubtraktionsRechnung(differenzierung=1,operator=random.choice(["-","+"]))',
                          'addSubSchriftSchwer':'erzeugeSchrAdditionsSubtraktionsRechnung(differenzierung=2,operator=random.choice(["-","+"]))',
                          'multiSchrEinFaktorOhneUbertrag':'erzeugeMultiplikationen(maxStellenFaktorZwei=1,ohneUebertrag=True,normal=False,schwer=False)',
                          'multiSchrEinFaktorMitUbertrag':'erzeugeMultiplikationen(maxStellenFaktorZwei=1,ohneUebertrag=False,normal=False,schwer=False)',
                          'multiSchr':'erzeugeMultiplikationen(maxStellenFaktorZwei=2,ohneUebertrag=False,normal=False,schwer=False)',
                          'multiSchrSchwer':'erzeugeMultiplikationen(maxStellenFaktorZwei=3,ohneUebertrag=False,normal=False,schwer=True)',
                          'diviSchr':'erzeugeDivision()',
                          'diviSchr2stellig':'erzeugeDivision(zweiStellig=True)',
                          'diviSchrMitRest':'erzeugeDivision(mitRest=True)',
                          'diviSchrLinienVorg':'erzeugeDivision(nurLinien=True)',
                          'diviSchrSubtrSchritt':'erzeugeDivision(nurSubtraktion=True)',
                          'diviSchrMultiSchritt':'erzeugeDivision(nurMultiplikation=True)',
                          'diviSchrErgEintrSchritt':'erzeugeDivision(nurErgebnisEintragen=True)',
                          'diviSchrRunterzSchritt':'erzeugeDivision(nurRunterZiehen=True)',
                          'diviSchrResteintr':'erzeugeDivision(trageRestEin=True)',
                          'erweitern':'erzeugeErweitern()','kuerzen':'erzeugeKuerzen()','kuerzenMitTeiler':'erzeugeKuerzen(mitTeiler=True)',
                          'reihe':'BruchReiheAufgabe()','reihePosZufaellig':'BruchReiheAufgabe(faktorenBeliebig=True)','bruchVergleichen':'erzeugeBruchVergleichen()',
        'labyrinthKlein':f'erzeugeLabyrinthAufgabe(hoehe=5,anzSpalten={anzSpalten})',
        'labyrinthMittel':f'erzeugeLabyrinthAufgabe(hoehe=10,anzSpalten={anzSpalten})',
        'labyrinthGross':f'erzeugeLabyrinthAufgabe(hoehe=20,anzSpalten={anzSpalten})',
        'labyrinthRiesig':f'erzeugeLabyrinthAufgabe(hoehe=20,anzSpalten={anzSpalten},riesig=True)',
        'BruchzuGemischteZahl':'erzeugeBruchzuGemischteZahl()', 'GemischteZahlzuBruch':'erzeugeGemischteZahlZuBruch()',
        'Bruchteil':'erzeugeBruchteileBerechnen()','GanzesBerechnen':'erzeugeGemischteZahlZuBruch()',
        'BruchAddSubGleichAddition':"erzeugeBruchAddition(gleichnamig=True,operator='+')",'BruchAddSubGleichSubtraktion':"erzeugeBruchAddition(gleichnamig=True,operator='-')",
        'BruchAddSubUngleichAddition':"erzeugeBruchAddition(gleichnamig=False,operator='+')",'BruchAddSubUngleichSubtraktion':"erzeugeBruchAddition(gleichnamig=False,operator='-')",
        'BruchAddSubBel':"erzeugeBruchAddition(gleichnamig=False,operator=random.choice(['+','-']))",
        'BruchMultiNat':'BruchMitNatuerlicherZahlMulti()',#'BruchDiviNat',
        'zweiBruecheMulti':'zweiBruecheMulti()','zweiBruecheDividieren':'zweiBruecheDividieren()',
        'deziVergl':'deziZahlenVergleichen(nachkommestellen=random.randint(2,5),mitText='+str(mitText)+')',
        'deziStrahl':'erzeugeZahlenstrahleDezimalzahlenEinteilungTikz(laenge=5,anzPfeile=2,zufall=True)',
        'deziRunden':'dezimalzahlenRunden(random.randint(1,4),2,mitText='+str(mitText)+')',
        'deziAddSubEinfach':'deziZahlenAddierenSubtrahieren(1,operator=random.choice(["+","-"]),mitText='+str(mitText)+')',
        'deziAddSub':'deziZahlenAddierenSubtrahieren(random.randint(1,4),operator=random.choice(["+","-"]),mitText='+str(mitText)+')',
        'deziAddSubSchwer':'deziZahlenAddierenSubtrahieren(random.randint(2,5),operator=random.choice(["+","-"]),mitText='+str(mitText)+')',
        'deziMulti1Stelle':'deziZahlenMultiDivi(nachkommastellen=1,operator="*")',
        'deziDivi1Stelle':'deziZahlenMultiDivi(nachkommastellen=1,operator="/")',
        'deziMulti3Stellen': 'deziZahlenMultiDivi(nachkommastellen=3,operator="*")',
        'deziDivi3Stellen': 'deziZahlenMultiDivi(nachkommastellen=3,operator="/")',
        'deziMultiDivi3Stellen': 'deziZahlenMultiDivi(nachkommastellen=3,operator="")',
        'rechneLaengenEinheitenUm':'rechneEinheitenUm(art="laengen")',
        'rechneLaengenEinheitenUmEinschritt':'rechneEinheitenUm(art="laengen",einSchritt=True)',
        'rechneLaengenEinheitenUmEinschrittmitKomma':'rechneEinheitenUm(art="laengen",mitKomma=True)',
        'rechneLaengenEinheitenUmMitKomma':'rechneEinheitenUm(art="laengen",mitKomma=True)',
        'rechneQuadrateEinheitenUm':'rechneEinheitenUm(art="flaechen")','rechneQuadrateEinheitenUmEinschritt':'rechneEinheitenUm(art="flaechen",einSchritt=True)',
        'rechneGewichtEinheitenUmEinschritt':'rechneEinheitenUm(art="gewicht",einSchritt=True)',
        'rechneZeitEinheitenUmEinfachMitKommaEinschrittObenNachUnten':'rechneEinheitenUm("zeit",einSchritt=True,mitKomma=True,einfach=True)',
        'rechneZeitEinheitenUmEinfachMitKomma':'rechneEinheitenUm("zeit",einSchritt=False,mitKomma=True,einfach=True)',
        'rechneZeitEinheitenUmEinfachMitKommaOhneTagUsw':'rechneEinheitenUm("zeitOhne",einSchritt=False,mitKomma=True,einfach=True)',
        'rechneFlaechenEinheitenUmEinfachMitKomma':'rechneEinheitenUm("flaechen",einSchritt=False,mitKomma=True,einfach=False)',
        'GemischteEinheitenAddierenSubtrahieren':'addiereSubtrahiereEinheiten()','LaengenEinheitenAddierenSubtrahieren':'addiereSubtrahiereEinheiten(art="laengen")',
        'GewichtEinheitenAddierenSubtrahieren':'addiereSubtrahiereEinheiten(art="gewicht")','ZeitEinheitenAddierenSubtrahieren':'addiereSubtrahiereEinheiten(art="zeitOhne")',
        'bestimmeUhrzeit':'erzeugeZeitBestimmenAfg()','addiereUhrzeit':'erzeugeAddiereUhrzeit(schwer=False)','addiereUhrzeitSchwer':'erzeugeAddiereUhrzeit(schwer=True)',
        'bestimmeMitteMitSchritt':F'erzeugeMittlerenWertBestimmen(mitSchritt=True,mitText={mitText})',
        'bestimmeMitte':F'erzeugeMittlerenWertBestimmen(mitText={mitText})',
        'loeseKlammerAufRatZahlen':F'erzeugeRationaleZahlenKlammerAufloesen(mitText={mitText})',
        'addRatioZahlen':'erzeugeRationaleZahlenAufgabe(operator="+")','subRatioZahlen':'erzeugeRationaleZahlenAufgabe(operator="-")','addSubRatioZahlen':'erzeugeRationaleZahlenAufgabe()',
        'multiRatioZahlen':'erzeugeRationaleZahlenAufgabeMalGeteilt(operator="*")','diviRatioZahlen':'erzeugeRationaleZahlenAufgabeMalGeteilt(operator="/")','multiDiviRatioZahlen':'erzeugeRationaleZahlenAufgabeMalGeteilt()',
        'zahlenStrahlGanzeZahlen':F'erzeugeZahlenstrahlGanzeZahlen(laenge=4,nurNatuerlich=False,anzPfeile=-1,ohneKammazahlen=True,mitText={mitText})',
        'zahlenStrahlRationaleZahlenEinfach':F'erzeugeZahlenstrahlGanzeZahlen(laenge=4,nurNatuerlich=False,anzPfeile=-1,ohneKammazahlen=True,mitText={mitText})',
        'zahlenStrahlRationaleZahlenSchwer':F'erzeugeZahlenstrahleDezimalzahlenEinteilungTikz(laenge=5,anzPfeile=2,zufall=True,mitText={mitText},rational=True)',
        'koordinatensystemGanzeZahlenMitVorgabe':F'erzeugePunkteImKoordsystemAufgabe(mitKoordsystem=True,nurGroesserNull=False,mitText={mitText})',
        'koordinatensystemGanzeZahlen': F'erzeugePunkteImKoordsystemAufgabe(nurGroesserNull=False,mitText={mitText})',
        'koordinatensystemRationaleZahlenMitVorgabe': F'erzeugePunkteImKoordsystemAufgabe(mitKoordsystem=True,kommazahlen=True,nurGroesserNull=False,mitText={mitText})',
        'koordinatensystemRationaleZahlen': F'erzeugePunkteImKoordsystemAufgabe(kommazahlen=True,nurGroesserNull=False,mitText={mitText})',
        'koordinatensystemGanzZahlenAuto':F'zeichneFigurImKoordsystem(auswahl="auto",faktor=1,mitKoordsystem=False,mitText={mitText})',
        'koordinatensystemRationaleZahlenAuto':F'zeichneFigurImKoordsystem(auswahl="auto",faktor=0.1,mitKoordsystem=False,mitText={mitText})',
        'koordinatensystemGanzeZahlenNikolaushaus':F'zeichneFigurImKoordsystem(auswahl="nikolaushaus",faktor=2,mitKoordsystem=False,mitText={mitText})',
        'koordinatensystemRationaleZahlenNikolaushaus':F'zeichneFigurImKoordsystem(auswahl="nikolaushaus",faktor=2.5,mitKoordsystem=False,mitText={mitText})',
        'koordinatensystemRationaleZahlenNikolaushausMitKoord':F'zeichneFigurImKoordsystem(auswahl="nikolaushaus",faktor=2.5,mitKoordsystem=True,mitText={mitText})',
        'koordinatensystemDinoNatuerlicheZahlen':F'zeichneFigurImKoordsystem(auswahl="dino",faktor=1,mitKoordsystem=True,mitText={mitText})',
        'koordinatensystemDinoGanzeZahlen':F'zeichneFigurImKoordsystem(auswahl="dino",negZahlen=True,faktor=1,mitKoordsystem=True,mitText={mitText})',
        'koordinatensystemDracheNatuerlicheZahlen':F'zeichneFigurImKoordsystem(auswahl="drache",faktor=1,mitKoordsystem=True,mitText={mitText})',
        'koordinatensystemDracheGanzeZahlen':F'zeichneFigurImKoordsystem(auswahl="drache",negZahlen=True,faktor=1,mitKoordsystem=True,mitText={mitText})',
        'UmfangMessen':'erzeugeUmfangRechnung(mitText='+str(mitText)+')',
        'FlaecheMessen':'erzeugeFlaechenberechnung(mitText='+str(mitText)+')',
        'FlaecheUmfang':'erzeugeUmfangFlaechenBerechnung(mitText='+str(mitText)+')',
        'ParallelogrammFlaecheMessenMitBeschr':F'erzeugeFlaechenParallelogrammAufgabe(mitText={mitText},mitBeschr=True)',
        'ParallelogrammFlaecheMessenOhneBeschr':F'erzeugeFlaechenParallelogrammAufgabe(mitText={mitText},mitBeschr=False)',
        'DracheFlaecheMessenMitBeschr':F'erzeugeFlaechenDrachenAufgabe(mitText={mitText},mitBeschr=True)',
        'DracheFlaecheMessenOhneEundF':F'erzeugeFlaechenDrachenAufgabe(mitText={mitText},mitEundF=False)',
        'DracheFlaecheMessenOhneBeschr':F'erzeugeFlaechenDrachenAufgabe(mitText={mitText},mitBeschr=False)',
        'RauteFlaecheMessenMitBeschr':F'erzeugeFlaechenDrachenAufgabe(mitText={mitText},mitBeschr=True,istRaute=True)',
        'RauteFlaecheMessenOhneBeschr':F'erzeugeFlaechenDrachenAufgabe(mitText={mitText},mitBeschr=False,istRaute=True)',
        'RauteFlaecheMessenOhneEundF':F'erzeugeFlaechenDrachenAufgabe(mitText={mitText},mitEundF=False,istRaute=True)',
        'DreieckFlaecheMessenMitBeschr':F'erzeugeFlaechenDreieckAufgabe(mitText={mitText},mitBeschr=True)',
        'DreieckFlaecheMessenOhneBeschr':F'erzeugeFlaechenDreieckAufgabe(mitText={mitText},mitBeschr=False)',
        'propAufgabeMitPfeilenBeschr':'erzeugePropTabllenAufgaben(mitPfeilen=True,mitBeschr=True)',
        'propAufgabeMitPfeilen': 'erzeugePropTabllenAufgaben(mitPfeilen=True,mitBeschr=False)',
        'propAufgabe': 'erzeugePropTabllenAufgaben(mitPfeilen=False,mitBeschr=False)',
        'antiPropAufgabe': 'erzeugeAntiPropTabllenAufgaben(mitPfeilen=False,mitBeschr=False)',
        'propDreisatzEinfach':'propDreisatz()',
        'antiPropDreisatzEinfach':'propAntiDreisatz()',
        'propZuordDreisatzEinfach':'erzeugeProportionaleDreisatzRechnungen(einfach=True,mitText='+str(mitText)+')',
        'propZuordDreisatz':'erzeugeProportionaleDreisatzRechnungen(mitText='+str(mitText)+')',
        'propZuordDreisatzKomma':'erzeugeProportionaleDreisatzRechnungen(komma=True,mitText='+str(mitText)+')',
        'antiPropZuordDreisatzEinfach': 'erzeugeAntiProportionaleDreisatzRechnungen(einfach=True,mitText='+str( mitText)+')',
        'propDiagramVorgegeben':F'erzeugePropDiagrammErstellAufgaben(diagrammVorgegeben=True,mitText={mitText})',
        'propDiagramNichtVorgegeben':F'erzeugePropDiagrammErstellAufgaben(diagrammVorgegeben=False,mitText={mitText})',
        'ZusGesetztFlaeche':'erzeugeZusammengesetzRechtecke(n=3,gesamtlaenge=5,hoehe=5,mitText='+str(mitText)+')',
        'ZusGesetztFlaecheSchw':'erzeugeZusammengesetzRechteckeSchwer(n=3,gesamtlaenge=5,maxHoehe=5,mitText='+str(mitText)+')',
        'schraffiereRechteckProzentVorgabe':'erzeugeProzentzeichnen(mitVorgabe=True)',
        'schraffiereRechteckProzent': 'erzeugeProzentzeichnen(mitVorgabe=False)',
        'schraffiertenProzentErkennen': F'erkenneProzent(mitText={mitText})',
        'schraffiertenProzentErkennenKreis': F'erkenneProzentKreis(mitText={mitText})',
        'ProzRechPWert':'erzeugeProzentwertAufgaben(n=1)',
        'ProzRechPsatzWert':'erzeugeProzentsatzAufgaben(n=1)',
        'ProzRechGWert':'erzeugeGrundwertAufgaben(n=1)',
        'ProzRechPWertHS':'erzeugeProzentwertAufgaben(n=1,HS=True)',
        'ProzRechPsatzWertHS':'erzeugeProzentsatzAufgaben(n=1,HS=True)',
        'ProzRechGWertHS':'erzeugeGrundwertAufgaben(n=1,HS=True)',
        'PreozRechGemischtHS':F'zufaelligeProzentaufgabe(n=1,HS=True)',
        'ZinsenBerechnen':'erzeugeProzentwertAufgaben(n=1,bez=["Kapital","Zinssatz"],einheit="\\euro{}")',
        'ZinsatzBerechnen':'erzeugeProzentsatzAufgaben(n=1,bez=["Kapital","Zinsen"],einheit="\\euro{}")',
        'KapitalBerechnen':'erzeugeGrundwertAufgaben(n=1,bez=["Zinsen","Zinssatz"],einheit="\\euro{}")',
        'verminderterGrundwert':'erzeugeVerminderteGrundwertAufgaben(1)','vermehrterGrundwert':'erzeugeVermehrterGrundwertAufgaben(1)',
        'verminderterGrundwertMitQ':'erzeugeVerminderteGrundwertAufgaben(1,lsgMitDreisatz=False)','vermehrterGrundwertMitQ':'erzeugeVermehrterGrundwertAufgaben(1,lsgMitDreisatz=False)',
        'TagesMonatsZinsen':'erzeugeTagesMonatsZinsberechnung(gesucht="Z")',
        'TagesMonatsZinsenUmformen':'erzeugeTagesMonatsZinsberechnung()',
        'QuaderVolOber':'erzeugeQuaderOberVolBerech(breitePbox=5,maxDim=5,einheit="cm")','ZylinderVolOber':'erzeugeZylibderOberVolBerech(breitePbox=5,maxDim=5,einheit="cm")',
        'QuaderMitLoch':'erzeugeQuaderMitLochBerech(breitePbox=5,maxDim=5)',
        'Dreiecksprisma':'erzeugeDreiecksPrismaOberVolBerech(breitePbox="5",maxDim=5,mitText='+str(mitText)+')',
        'DreiecksprismaMessen':'erzeugeDreiecksPrismaOberVolBerech(breitePbox="5",maxDim=5,mitText='+str(mitText)+',messen=True)',
        'zahlInTermEinsetzen':F'variabelErsetzen(mitText={mitText})',
        'findeTerm':F'findenEinenTerm(mitText={mitText})',
        'termeUmformen':F'erzeugeTermAufgaben(variablen=random.choice(["a","b","x","y","a b","x y"]),anzahl=random.randint(2,4),variMaxAnzProUnterterm=2,mitText={mitText})',
        'termeUmformenHS':F'erzeugeTermAufgaben(variablen=random.choice(["a","b","x","y","a b","x y"]),anzahl=random.choice([2,3,3,3,3,4,4]),variMaxAnzProUnterterm=1,mitText={mitText})',
        'einKlammLoesen':F'erzeugeTermAusklammernAufgabe(mitText={mitText})',
        'termeUmformenKlammer':F'erzeugeTermAufgaben(variablen=random.choice(["a","b","x","y","a b","x y"]),anzahl=random.randint(2,4),variMaxAnzProUnterterm=2,mitKlammer=True,mitText={mitText})',
        'einfGlNurPlusMinus':F'erzeugeSehrEinfacheGleichungen(variabel=random.choice(["a","b","x","y"]),nurPlusMinus=True,mitText={mitText})',
        'einfGlNurMal':F'erzeugeSehrEinfacheGleichungen(variabel=random.choice(["a","b","x","y"]),nurMalGeteilt=True,mitText={mitText})',
        'einfGlNurMalVariTerm2':F'erzeugeSehrEinfacheGleichungen(variabel=random.choice(["a","b","x","y"]),PlusMinusVariImTerm2=True,mitText={mitText})',
        'einfGlNurPlusMinusVariRechts':F'erzeugeSehrEinfacheGleichungen(variabel=random.choice(["a","b","x","y"]),PlusMinusVariRechtsImTerm1=True,mitText={mitText})',
        'einfGlMalUndPlusMinus':F'erzeugeSehrEinfacheGleichungen(variabel=random.choice(["a","b","x","y"]),MalUndPlusMinus=True,mitText={mitText})',
        'einfGlMalUndPlusMinusAufgeteilt':F'erzeugeSehrEinfacheGleichungen(variabel=random.choice(["a","b","x","y"]),MalUndPlusMinusAufgeteilt=True,mitText={mitText})',
        'einfacheGleichung':F'erzeugeEinfacheGleichung(variabel=random.choice(["a","b","x","y"]),mitText={mitText})',
        'einfacheGleichungOhneKomma':F'erzeugeEinfacheGleichung(variabel=random.choice(["a","b","x","y"]),ohneKomma=True,mitText={mitText})',
        'einfacheGleichungMitKlammer':F'erzeugeEinfacheGleichung(variabel=random.choice(["a","b","x","y"]),mitKlammer=True,mitText={mitText})',
        'einfacheGleichungMitQuadrat':F'erzeugeEinfacheGleichung(variabel=random.choice(["a","b","x","y"]),mitKlammer=True,mitQuadrat=True,mitText={mitText})',
        'einfacheFormelUmformen':'erzeugeEinfacheFormelnUmformen()',
        'propFktZeichnen':'erzeugeAfgLineareFunktionZeichnen(art="prop",steigung=random.choice(["bruch","dezi","nat"]),achsenlaenge=7,maxX=3)',
        'propFktErkennen':'erzeugeAfgLineareFktErkennen(art="prop",steigung="bruch",achsenlaenge=7,maxX=3)',
        'lineareFktZeichnen':'erzeugeAfgLineareFunktionZeichnen(art="linear",steigung=random.choice(["bruch","dezi","nat"]),achsenlaenge=7,maxX=3)',
        'lineareFktErkennen':'erzeugeAfgLineareFktErkennen(art="linear",steigung="bruch",achsenlaenge=7,maxX=3)',
        'umfangsFunktionRechteck':F'erzeugeUmfangsFunktion(typ="Rechteck",mitText={mitText})',
        'umfangsFunktionDreieck':F'erzeugeUmfangsFunktion(typ="Dreieck",mitText={mitText})',
        'einfacheGleichungZweiVariablen':F'erzeugeGleichungmitZweiVariablen(mitText={mitText})',
        'einfacheGleichungZweiVariablenZeichnen':'erzeugeGleichungmitZweiVariablenZeichnen()',
        'ZweiGleichungmitZweiVariablenZeichnen':'erzeugeZweiGleichungmitZweiVariablen(zeichnerisch=True)',
        'ZweiGleichungmitZweiVariablenGleichsetzen':'erzeugeZweiGleichungmitZweiVariablen(zeichnerisch=False)',
        'quadratwurzelEinfach':'erzeugeWurzelRechnungen(typ="Einfach")',
        'quadratwurzelBruchEinzeln':'erzeugeWurzelRechnungen(typ="Bruch Einzeln")',
        'quadratwurzelBruch':'erzeugeWurzelRechnungen(typ="Bruch")',
        'quadratwurzelDezimalzahlenEinfach':'erzeugeWurzelRechnungen(typ="Dezimalwurzel Einfach")',
        'quadratwurzelDezimalzahlen':'erzeugeWurzelRechnungen(typ="Dezimalwurzel")',
        'quadratwurzelBeliebig':'erzeugeWurzelRechnungen(typ="")',
        'quadratwurzelUmfangBerechnen':'erzeugeWurzelUmfangsberechnungVomQuadrat()',
        'quadratwurzelZwischenNatZahl':'zwischenWelcheNatZahlen(mitText='+str(mitText)+')',
        'quadratwurzelQuaderOberfl':'wurzelOberflaecheWurfel()',
        'quadratwurzelQuaderZusammengesOberfl':'wurzelOberflaecheWurfel(zusammengesetzt=True)',
        'quadratwurzelTeilweise':'teilweiseWurzelziehen(mitText='+str(mitText)+')',
        'quadratwurzelTeilweiseSchwer':'teilweiseWurzelziehen(mitText='+str(mitText)+',einfach=False)',
        'quadratwurzelZusammenziehen':'wurzelnZusammenZiehen()',
        'quadratwurzelAddieren':'wurzelnAddieren(anzahl=random.randint(2,3),mitText='+str(mitText)+')',
        'pythagorasFormulierenSeiten':'erzeugePythagorasFormulieren(seitenBeshr=True,pktBeschr=False,gemischt=False,mitBogen=True,mitText='+str(mitText)+')',
        'pythagorasFormulierenSeitenOhneBogen':'erzeugePythagorasFormulieren(seitenBeshr=True,pktBeschr=False,gemischt=False,mitBogen=True,mitText='+str(mitText)+')',
        'pythagorasFormulierenPunkte':'erzeugePythagorasFormulieren(seitenBeshr=False,pktBeschr=True,gemischt=False,mitBogen=True,mitText='+str(mitText)+')',
        'pythagorasFormulierenPunkteOhneBogen':'erzeugePythagorasFormulieren(seitenBeshr=False,pktBeschr=True,gemischt=False,mitBogen=False,mitText='+str(mitText)+')',
        'pythagorasFormulierenGemischt':'erzeugePythagorasFormulieren(seitenBeshr=False,pktBeschr=False,gemischt=True,mitBogen=True,mitText='+str(mitText)+')',
        'pythagorasFormulierenGemischtOhneBogen':'erzeugePythagorasFormulieren(seitenBeshr=False,pktBeschr=False,gemischt=True,mitBogen=False,mitText='+str(mitText)+')',
        'pythagorasHypBerechnenMitBogen':'erzeugePythagorasBerechnen(seitenwahl=2,mitBogen=True,mitText='+str(mitText)+')',
        'pythagorasKathBerechnenMitBogen':'erzeugePythagorasBerechnen(seitenwahl=random.randint(0,1),mitBogen=True,mitText='+str(mitText)+')',
        'pythagorasHypBerechnenOhneBogen':'erzeugePythagorasBerechnen(seitenwahl=2,mitBogen=False,mitText='+str(mitText)+')',
        'pythagorasKathBerechnenOhneBogen':'erzeugePythagorasBerechnen(seitenwahl=random.randint(0,1),mitBogen=False,mitText='+str(mitText)+')',
        'pythagorasBerechnenMitBogen':'erzeugePythagorasBerechnen(seitenwahl=-1,mitBogen=True,mitText='+str(mitText)+')',
        'pythagorasBerechnenOhneBogen':'erzeugePythagorasBerechnen(seitenwahl=-1,mitBogen=False,mitText='+str(mitText)+')',
        'pythagorasUmfangTrapezEinfach':'erzeugeTrapezUmfangBerechnung(mitText='+str(mitText)+')',
        'kreisRadius':F'erzeugeKreisberechnungen(typ="Radius",mitText={mitText})',
        'kreisUmfang':F'erzeugeKreisberechnungen(typ="Umfang",mitText={mitText})',
        'kreisFlaeche':F'erzeugeKreisberechnungen(typ="Flaeche",mitText={mitText})',
        'kreisUmfangFlaeche':F'erzeugeKreisberechnungen(typ="UmfangFlaeche",mitText={mitText})',
        'kreisUmfangNachFlaeche':F'erzeugeKreisberechnungen(typ="UmfachNachFlaeche",mitText={mitText})',
        'kreisFlaecheNachUmfang':F'erzeugeKreisberechnungen(typ="FlaecheNachUmfang",mitText={mitText})',
        'kreisFlaecheUmfKreisabschnitt':F'erzeugeUmfangFlaecheKreisabschnitt(mitText={mitText})',
        'kreisUmfangDreieckHalbkreis':F'umfangDreieckMitHalbkreis(mitText={mitText})',
        'strahlensatzFarbig':F'erzeugeStrahlensaetzeAufgaben(mitText={mitText})',
        'Mittelsenkrechte':F'erzeugeMittelsenkrechteAufgabe(mitText={mitText})',
        'Winkelhalbierende':F'erzeugeWinkelhalbbierendeAufgabe(mitText={mitText})',
        'DreieckSSS':F'erzeugeDreieckSSSKonstruktion(mitText={mitText})',
        'DreieckSWS':F'erzeugeDreieckSWSKonstruktion(mitText={mitText})',
        'DreieckWSW':F'erzeugeDreieckWSWKonstruktion(mitText={mitText})',
        'datenZurodnen':F'erzeugeSaeulenStreifenKreisDiagramm(typ="zuordnen",mitText={mitText})',
        'datenZeichnenEinfaerben':F'erzeugeSaeulenStreifenKreisDiagramm(typ="ZeichnenUndEinfaerben",mitText={mitText})',
        'datenZeichnen':F'erzeugeSaeulenStreifenKreisDiagramm(typ="Zeichnen",mitText={mitText})',
        'datenZeichnenUndBerechnen':F'erzeugeSaeulenStreifenKreisDiagramm(typ="ZeichnenUndBerechnen",mitText={mitText})',
        'datenAllesSelber':F'erzeugeSaeulenStreifenKreisDiagramm(typ="alles",mitText={mitText})',
        'datenStreifenZurodnen':F'erzeugeSaeulenStreifenKreisDiagramm(typ="zuordnen",mitText={mitText},streifen=True)',
        'datenStreifenZeichnenEinfaerben':F'erzeugeSaeulenStreifenKreisDiagramm(typ="ZeichnenUndEinfaerben",mitText={mitText},streifen=True)',
        'datenStreifenZeichnen':F'erzeugeSaeulenStreifenKreisDiagramm(typ="Zeichnen",mitText={mitText},streifen=True)',
        'datenStreifenZeichnenUndBerechnen':F'erzeugeSaeulenStreifenKreisDiagramm(typ="ZeichnenUndBerechnen",mitText={mitText},streifen=True)',
        'datenStreifenAllesSelber':F'erzeugeSaeulenStreifenKreisDiagramm(typ="alles",mitText={mitText},streifen=True)',
        'datenAuswertenRS':F'erzeugeDatenKennwerteBestimmen(mitText={mitText},RS=True)',
        'datenAuswertenHS':F'erzeugeDatenKennwerteBestimmen(mitText={mitText},RS=False)',
        'geschwGeschwBerechnen':F'erzeugeGeschwindigkeitsBerechnungen(typ="Geschwindigkeit",einheit=random.choice(["m/s","km/h"]),umrechnen=False,mitText={mitText})',
        'geschwGeschwBerechnenHS':F'erzeugeGeschwindigkeitsBerechnungen(typ="Geschwindigkeit",einheit=random.choice(["m/s","km/h"]),umrechnen=False,mitText={mitText},hauptschule=True)',
        'geschwGeschwBerechnenSchwer':F'erzeugeGeschwindigkeitsBerechnungen(typ="Geschwindigkeit",einheit=random.choice(["m/s","km/h"]),umrechnen=False,einfach=False,mitText={mitText})',
        'geschwBeliebigBerechnen':F'erzeugeGeschwindigkeitsBerechnungen(typ="",einheit=random.choice(["m/s","km/h"]),umrechnen=False,mitText={mitText})',
        'geschwBeliebigBerechnenHS':F'erzeugeGeschwindigkeitsBerechnungen(typ="",einheit=random.choice(["m/s","km/h"]),umrechnen=False,mitText={mitText},hauptschule=True)',
        'geschwBeliebigBerechnenSchwer':F'erzeugeGeschwindigkeitsBerechnungen(typ="",einheit=random.choice(["m/s","km/h"]),umrechnen=False,einfach=False,mitText={mitText})',
        'geschwGeschwBerechnenEinheitBeliebig':F'erzeugeGeschwindigkeitsBerechnungen(typ="Geschwindigkeit",einheit=random.choice(["m/s","km/h"]),umrechnen=True,mitText={mitText})',
        'geschwBeliebigBerechnenEinheitBeliebig':F'erzeugeGeschwindigkeitsBerechnungen(typ="",einheit=random.choice(["m/s","km/h"]),umrechnen=True,mitText={mitText})',
        'zeitWegDiagramm':F'erzeugeDiagrammErstellAufgaben(typ="Zeit-Weg",mitText={mitText})',
        'zeitWegDiagrammOhneDiaVorgabe':F'erzeugeDiagrammErstellAufgaben(typ="Zeit-Weg",diagrammVorgegeben=False,mitText={mitText})',
        'zeitWegDiagrammNurText':F'erzeugeDiagrammErstellAufgaben(typ="Zeit-Weg",diagrammVorgegeben=False,mitText={mitText},nurText=True)',
        'hebelZeichnen':F'hebelAufgaben(anzSpalten={anzSpalten},mitText={mitText})',
        'beschlBeliebigBerechnen':F'erzeugeBeschlBerechnungen(typ="",mitText={mitText})',
        'beschlWegBerechnenZeit':F'erzeugeBeschlWegBerechnungen(typ="Zeit",mitText={mitText})',
        'beschlWegBerechnenGeschw':F'erzeugeBeschlWegBerechnungen(typ="Geschwindigkeit",mitText={mitText})',
        'beschlWegBerechnenbel':F'erzeugeBeschlWegBerechnungen(typ="",mitText={mitText})',
        'atomErkennenEinfach':F'erkenneDasAtom(wenig=True,mitText={mitText})',
        'atomErkennen':F'erkenneDasAtom(mitText={mitText})',
        'atomZeichnen':F'zeichneDasAtom(mitText={mitText})',
        'atomIonErkennen':F'erkenneDasAtom(ion=-1,mitText={mitText})',
        'erzeugeAlleAtome':'schreibeAlleAtomeInDateien()',
        'bestimmeZerfall':'bestimmeZerfall()',
        'bestimmeZerfalln3':'bestimmeZerfall(n=3)',
    }
    return eval(rechnungsFunktionen[art])


def MoeglicheRechnungen(auswahl='keys',gebeListeZurueck=False):
    listeRechnungen={'Basisaufgaben':[('Basis','Plus, Minus, Mal, Geteil'),('Kopf','Kopfrechenaufgaben')],
                     'Spass':[('labyrinthKlein','Labryrinth Klein'),('labyrinthMittel','Labryrinth Mittel'),('labyrinthGross','Labryrinth Gross'),('labyrinthRiesig','Labryrinth Riesig')],
                     'Schriftliche Add-Sub':[('addSchriftLeicht','Addition Leicht'),('addSchrift','Addition Normal'),('addSchriftSchwer','Addition Schwer'),('subSchriftLeicht','Subtraktion Leicht'),('subSchrift','Subtraktion Normal'),('subSchriftSchwer','Subtraktion Schwer'),('addSubSchriftLeicht','Zufällig Leicht'),('addSubSchrift','Zufällig Normal'),('addSubSchriftSchwer','Zufällig Schwer')],
                     'Schriftl. Multi.-Division':[('multiSchrEinFaktorOhneUbertrag','Multi. Fakt einstellig ohne Übertrag'),('multiSchrEinFaktorMitUbertrag','Multi. Fakt einstellig mit Übertrag'),('multiSchr','Schriftliche Multiplikation'),('multiSchrSchwer','Schrft. Multiplikation Schwer'),('diviSchr','Division'),('diviSchr2stellig','Division 2 Stellig'),('diviSchrMitRest','Division mit Rest'),('diviSchrLinienVorg','Div. Linien Vorgegeben'),('diviSchrSubtrSchritt','Division Subtraktionsschritt'),('diviSchrMultiSchritt','Division Multiplikationsschritt'),('diviSchrRunterzSchritt','Division Runterziehen'),('diviSchrResteintr','Division Rest eintragen'),('diviSchrErgEintrSchritt','Division Ergebnis Eintragen')],
                     'Bruch-Grundlagenaufgaben': [('ggT','Größter gemeinsamer Teiler'),('kgV','Kleinstes gemeinsames Vielfache'),('erweitern','Erweitern'),('kuerzen','Kürzen'),('kuerzenMitTeiler','Kürzen mit Teiler'),('reihe','Bruch in einer Reihe'),('reihePosZufaellig','Bruch in Reihe Position Zufällig'),('bruchVergleichen','Brüche Vergleichen'),('BruchzuGemischteZahl','Bruch zur gemischten Zahl'),('GemischteZahlzuBruch','Gemischte Zahl zu Bruch')],
                     'Bruchrechen':[('BruchAddSubGleichAddition','Brüche Addieren gleicher Nenner'),('BruchAddSubGleichSubtraktion','Brüche Subtraktion gleicher Nenner'),('BruchAddSubUngleichAddition','Brüche Addition Ungleicher Nenner'),('BruchAddSubUngleichSubtraktion','Brüche Subtraktion ungleicher Nenner'),('BruchAddSubBel','Brüche Addieren/Subtrahieren'),('BruchMultiNat','Bruch mit natürlicher Zahle multiplizieren'),('zweiBruecheMulti','Zwei Brüche multiplizieren'),('zweiBruecheDividieren','Zwei Brüche dividieren')],
                     'Dezimalzahlen':[('deziVergl','Vergleichen'),('deziStrahl','Zahlenstrahl'),('deziRunden','Runden'),('deziAddSubEinfach','Addieren/Subtrahieren leicht'),('deziAddSub','Addieren/Subtrahieren'),('deziAddSubSchwer','Addieren/Subtrahieren schwer'),('deziMulti1Stelle','Multiplizieren 1 Stelle'),('deziDivi1Stelle','Dividieren 1 Stelle'),('deziMulti3Stellen','Multiplizieren 3 Stellen'),('deziDivi3Stellen','Dividieren 3 Stellen'),('deziMultiDivi3Stellen','Multi/Divi 3 Stellen')],
                     'Koordinatensysteme':[('koordinatensystemGanzeZahlenMitVorgabe','Ganze Zahlen mit Vorgabe'),('koordinatensystemGanzeZahlen','Ganze Zahlen'),('koordinatensystemRationaleZahlenMitVorgabe','Rationale Zahlen mit Vorgabe'),('koordinatensystemRationaleZahlen','Rationale Zahlen'),('koordinatensystemGanzZahlenAuto','Auto - Ganze Zahlen'),('koordinatensystemRationaleZahlenAuto','Auto - Rationale Zahlen'),('koordinatensystemGanzeZahlenNikolaushaus','Nikolaushaus Ganze Zahlen'),('koordinatensystemRationaleZahlenNikolaushaus','Nikolaushaus - Rationale Zahlen'),('koordinatensystemRationaleZahlenNikolaushausMitKoord','Nikolaushaus - Rationale Zahlen mit Koord'),('koordinatensystemDinoNatuerlicheZahlen','Dino Nat. Zahlen'),('koordinatensystemDinoGanzeZahlen','Dino Ganze Zahlen'),('koordinatensystemDracheNatuerlicheZahlen','Drache Nat. Zahlen'),('koordinatensystemDracheGanzeZahlen','Drache Ganze Zahlen')],
                     'Quadratwurzeln':[('quadratwurzelEinfach','Einfach'),('quadratwurzelBruchEinzeln','Wurzel nur im Nenner'),('quadratwurzelBruch','Wurzel im Bruch'),('quadratwurzelDezimalzahlenEinfach','Dezimalzahlen Einfach'),('quadratwurzelDezimalzahlen','Dezimalzahlen'),('quadratwurzelBeliebig','Gemischt'),('quadratwurzelUmfangBerechnen','Umfang berechnen'),('quadratwurzelQuaderOberfl','Kantlaenge vom Quader'),('quadratwurzelQuaderZusammengesOberfl','Kantlaenge vom zusammenges. Quader'),('quadratwurzelZwischenNatZahl','Zwischen welcher Nat. Zahl liegt?'),('quadratwurzelAddieren','Wurzeln Addieren/Subtrahieren'),('quadratwurzelZusammenziehen','Wurzel erst vereinen'),('quadratwurzelTeilweise','Wurzel Teilweise ziehen'),('quadratwurzelTeilweiseSchwer','Wurzel Teilweise ziehen Schwer')],
                     'Pythagoras': [('pythagorasFormulierenSeiten','Formulieren Seiten Beschr. mit recht. Winkel.'),('pythagorasFormulierenSeitenOhneBogen','Formulieren Seiten Beschr.'),('pythagorasFormulierenPunkte','Formulieren Punkte Beschr. mit recht. Winkel'),('pythagorasFormulierenPunkteOhneBogen','Formulieren Punkte Beschr.'),('pythagorasFormulierenGemischt','Formlieren Gemischt mit recht. Winkel'),('pythagorasFormulierenGemischtOhneBogen','Formlieren Gemischt'),('pythagorasHypBerechnenMitBogen','Hyp. berechnen mit recht. Winkel'),('pythagorasHypBerechnenOhneBogen','Hyp. berechnen ohne recht. Winkel'),('pythagorasKathBerechnenMitBogen','Kath. berechnen mit recht. Winkel'),('pythagorasKathBerechnenOhneBogen','Kath. berechnen ohne recht. Winkel'),('pythagorasBerechnenMitBogen','Bel. berechnen mit recht. Winkel'),('pythagorasBerechnenOhneBogen','Bel. berechnen ohne recht. Winkel'),('pythagorasUmfangTrapezEinfach','Ber. Umfang vom Trapez')],
                     'Kreis':[('kreisUmfang','Umfang Berechnen'),('kreisFlaeche','Fläche Berechnen'),('kreisUmfangFlaeche','Umfang/Fläche Berechnen'),('kreisRadius','Radius Berechnen'),('kreisUmfangNachFlaeche','Umfang nach Flaeche'),('kreisFlaecheNachUmfang','Fläche nach Umfang'),('kreisFlaecheUmfKreisabschnitt','Kreisabschnitt'),('kreisUmfangDreieckHalbkreis','Umfang Berechnen von Dreieck mit Halbkreis')],
                     'Geometrie':[('strahlensatzFarbig','Strahlensatz Farbig'),('Mittelsenkrechte','Mittelsenkrechte'),('Winkelhalbierende','Winkelhalbierende'),('DreieckSSS','Dreieck SSS Konstr.'),('DreieckSWS','Dreieck SWS Konstr.'),('DreieckWSW','Dreieck WSW Konstr.')],
                     'Einheiten':[('rechneLaengenEinheitenUm','Längen umrechnen'),('rechneLaengenEinheitenUmEinschritt','Längeneinheiten umrechnen nur eine Größenordnung'),('rechneLaengenEinheitenUmEinschrittmitKomma','Längeneinheiten, eine Größenordnung, mit Komma'),('rechneLaengenEinheitenUmMitKomma','Längen umrechnen mit Komma'),('rechneQuadrateEinheitenUm','Flächeneinheiten Umrechnen'),('rechneQuadrateEinheitenUmEinschritt','Flächeneinheiten umrechnen nur eine Größenordnung'),('rechneFlaechenEinheitenUmEinfachMitKomma','Flächeneinheiten Umrechnen mit Komma'),('rechneGewichtEinheitenUmEinschritt','Gewichtseinheiten umrechnen'),('rechneZeitEinheitenUmEinfachMitKommaEinschrittObenNachUnten','Zeiteinheiten umrechnen nur eine Größenordnung Mit Komma'),('rechneZeitEinheitenUmEinfachMitKomma','Zeiteinheiten umrechnen mit Komma'),('rechneZeitEinheitenUmEinfachMitKommaOhneTagUsw','Zeiteinheiten umrechnen ohne Tag, Woche usw.'),('GemischteEinheitenAddierenSubtrahieren','Gemischte Einheiten Addieren'),('LaengenEinheitenAddierenSubtrahieren','Längeneinheiten Addieren/Subtrahieren'),('GewichtEinheitenAddierenSubtrahieren','Gewichtseinheiten Addieren/Subtrahieren'),('ZeitEinheitenAddierenSubtrahieren','Zeiteinheiten Addieren/Subtrahieren')],
                     'Zeiten':[('bestimmeUhrzeit','Uhrzeit ablesen'),('addiereUhrzeit','Zeiten addieren'),('addiereUhrzeitSchwer','Zeiten addieren Schwer')],
                     'Rationale Zahlen':[('bestimmeMitteMitSchritt','Bestimme den mittleren Wert mit vorg. Schritt'),('bestimmeMitte','Bestimme den mittleren Wert'),('loeseKlammerAufRatZahlen','loese Klammer auf'),('addRatioZahlen','Rat. Zahl. Addieren'),('subRatioZahlen','Rat. Zahl. Subtrahieren'),('addSubRatioZahlen','Rat. Zahl. Add oder Sub Zufällig'),('multiRatioZahlen','Rat. Zahl. Multiplizieren'),('diviRatioZahlen','Rat. Zahl. Dividieren'),('multiDiviRatioZahlen','Rat. Zahl. Mult. oder Divi Zufällig'),('zahlenStrahlGanzeZahlen','Zahlenstrahl Ganze Zahlen'),('zahlenStrahlRationaleZahlenEinfach','Zahlenstrahl einfach Rat. Zahlen'),('zahlenStrahlRationaleZahlenSchwer','Zahlenstrahl Rat. Zahlen')],
                     'Flächen und Umfänge':[('UmfangMessen','Rechteck Umfänge best.'),('FlaecheMessen','Rechteck Flächen bestimmen'),('FlaecheUmfang','Rechteck Fl. und Umf. bestimmen'),('ZusGesetztFlaeche','Zusammengesetzte Flächen bestimmen'),('ZusGesetztFlaecheSchw','Zusammengesetzte Flächen bestimmen Schwer'),('ParallelogrammFlaecheMessenMitBeschr','Parallelogramm Fl. Mit Beschr.'),('ParallelogrammFlaecheMessenOhneBeschr','Parallelogramm Fl. Ohne Beschr.'),('RauteFlaecheMessenMitBeschr','Raute Fl. Mit Beschr.'),('RauteFlaecheMessenOhneBeschr','Raute Fl. Ohne Beschr.'),('RauteFlaecheMessenOhneEundF','Raute Fl. Ohne EundF.'),('DracheFlaecheMessenMitBeschr','Drache Fl. Mit Beschr.'),('DracheFlaecheMessenOhneBeschr','Drache Fl. Ohne Beschr.'),('DracheFlaecheMessenOhneEundF','Drache Fl. Ohne EundF.'),('DreieckFlaecheMessenMitBeschr','Dreieck Fl. Mit Beschr.'),('DreieckFlaecheMessenOhneBeschr','Dreieck Fl. Ohne Beschr.')],
                     'Proportionalitäten und Zuordnungen':[('propAufgabeMitPfeilenBeschr','Prop Tabelle mit Beschr'),('propAufgabeMitPfeilen','Prop Tabelle mit Pfeilen'),('propAufgabe','Prop Tabelle'),('antiPropAufgabe','Antiprop. Tabelle'),('propDreisatzEinfach','Dreisatz Einfach'),('antiPropDreisatzEinfach','Antiprop Dreisatz Einfach'),('propZuordDreisatzEinfach','Dreisatz mit Text/Einfach'),('propZuordDreisatz','Dreisatz mit Text'),('propZuordDreisatzKomma','Dreisatz mit Text und Komma'),('antiPropZuordDreisatzEinfach','Anti-Dreisatz mit Text/Einfach'),('propDiagramVorgegeben','Diagramm Vorg. erzeugen.'),('propDiagramNichtVorgegeben','Diagramm nicht Vorg. erzeugen.')],
                     'Prozent- und Zinsrechnung':[('schraffiereRechteckProzentVorgabe','Zeichen Rechteck Vorg.'),('schraffiereRechteckProzent','Zeichne Rechteck'),('schraffiertenProzentErkennen','Erkennen den Prozentwert'),('schraffiertenProzentErkennenKreis','Erkennen den Prozentwert im Kreis'),('ProzRechPWert','Prozentwert berechnen'),('ProzRechPsatzWert','Prozentsatz berechnen'),('ProzRechGWert','Grundwert berechnen'),('ProzRechPWertHS','Prozentwert berechnenHS'),('ProzRechPsatzWertHS','Prozentsatz berechnen HS'),('ProzRechGWertHS','Grundwert berechnen HS'),('ZinsenBerechnen','Zinsen berechnen'),('ZinsatzBerechnen','Zinsatz berechnen'),('KapitalBerechnen','Kapital berechnen'),('verminderterGrundwert','verminderten G-Wert berechnen'),('vermehrterGrundwert',' vermehrten G-Wert berechnen'),('verminderterGrundwertMitQ','vermin. G-Wert mit q berechnen'),('verminderterGrundwertMitQ','vermehr. G-Wert mit q berechnen'),('TagesMonatsZinsen','Tages- Monatszinsen berechnen'),('TagesMonatsZinsenUmformen','Tages- Monatszinsen umformen und berechnen')],
                     'Prismen':[('QuaderVolOber','Vol., Oberfl. Quader'),('ZylinderVolOber','Vol., Oberfl. Zylinder'),('QuaderMitLoch','Vol., Oberfl. Quader Mit Loch'),('Dreiecksprisma','Dreiecksprisma'),('DreiecksprismaMessen','Dreiecksprisma Seiten messen')],
                     'Terme und Gleichungen':[('zahlInTermEinsetzen','Werte Einsetzen'),('findeTerm','Bestimme Term bei vorg. x und Erg.'),('termeUmformenHS','Terme umformen HS'),('termeUmformen','Terme umformen'),('einKlammLoesen','Einfache Klammern Auflösen'),('termeUmformenKlammer','Terme mit Klammern umformen'),('einfGlNurPlusMinus','Gleichung nur +/- lösen'),('einfGlNurMal','Gl. nur mit Mal/Geteilt lösen'),('einfGlMalUndPlusMinus','Gl. lösen Mal und Minus'),('einfGlNurPlusMinusVariRechts','Gl lösen +/- Vari steht rechts im l. Term.'),('einfGlNurMalVariTerm2','Gl lösen Vari steht im r. Term'),('einfGlMalUndPlusMinusAufgeteilt','Gl lösen Erste Term zusammenfassen. Einfach'),('einfacheGleichung','einfache Gleichung lösen'),('einfacheGleichungOhneKomma','einfache Gleichung lösen Ohne Komma'),('einfacheGleichungMitKlammer','einf. Gleichung mit Klammer lösen'),('einfacheGleichungMitQuadrat','einf. Gl. mit Kl. und Quadrat lösen'),('einfacheFormelUmformen','Einfache Formeln umformen')],
                     'Gleichungssysteme':[('einfacheGleichungZweiVariablen','einf. Gl. mit 2 Variablen'),('einfacheGleichungZweiVariablenZeichnen','einf. Gl. mit 2 Vari. Zeichnen'),('ZweiGleichungmitZweiVariablenZeichnen','2 Gl. durch zeichnen loesen'),('ZweiGleichungmitZweiVariablenGleichsetzen','2 Gl. durch gleichsetzen loesen')],
                     'Funktionen':[('propFktZeichnen','Proportionale Fkten zeichnen'),('propFktErkennen','Proportionale Fkten erkennen'),('lineareFktZeichnen','Lineare Fkten zeichnen'),('lineareFktErkennen','Lineare Fkten erkennen'),('umfangsFunktionRechteck','Bestimme Rechteck Umfangsfunktion'),('umfangsFunktionDreieck','Bestimme Dreieck Umfangsfunktion')],
                     'Daten':[('datenStreifenZurodnen','Daten dem Säulen-/Streifdiagramm zuord.'),('datenZurodnen','Daten dem Säulen-/Kreisdiagramm zuord.'),('datenStreifenZeichnenEinfaerben','Daten zeichnen und Streifen Diag. einfärben.'),('datenZeichnenEinfaerben','Daten zeichnen und Kreis Diag. einfärben.'),('datenStreifenZeichnen','Daten Säulen-/Streifendiagr. Zeichnen'),('datenZeichnen','Daten Säulen-/Kreisdiagr. Zeichnen'),('datenStreifenZeichnenUndBerechnen','Daten Zeichnen und Berechnen Streifendia.'),('datenZeichnenUndBerechnen','Daten Zeichnen und Berechnen Kreisdia.'),('datenStreifenAllesSelber','Daten alles ausw. Streifendia.'),('datenAllesSelber','Daten alles ausw. Kreis.'),('datenAuswertenRS','Daten auswerten inkl Quartil'),('datenAuswertenHS','Daten auswerten ohne Quartil')],
                     'Physik': [('geschwGeschwBerechnen', 'Berechne die Geschw.'),('geschwGeschwBerechnenHS', 'Berechne die Geschw. für HS'),('geschwBeliebigBerechnen', 'Berechne fehl. Wert Geschw.'),('geschwBeliebigBerechnenHS', 'Berechne fehl. Wert Geschw. für HS'),('geschwGeschwBerechnenSchwer', 'Berechne die Geschw. mit Komma'),('geschwBeliebigBerechnenSchwer', 'Berechne fehl. Wert Geschw. mit Komma'),('geschwGeschwBerechnenEinheitBeliebig', 'Berechne Gesch. mit bel. Einheiten.'),('geschwBeliebigBerechnenEinheitBeliebig', 'Berechne fehl. Wert mit bel. Einheiten.'),('zeitWegDiagramm','Zeit Weg Diagramm'),('zeitWegDiagrammOhneDiaVorgabe','Zeit Weg Dia ohne Dia. Vorgabe'),('zeitWegDiagrammNurText','Zeit Weg Dia ohne Vorgabe'),('hebelZeichnen','Hebelaufgabe'),('beschlBeliebigBerechnen', 'Berechne fehl. Wert Beschl.'),('beschlWegBerechnenZeit','Berechne Weg Bei Beschl. mit vorg. Zeit'),('beschlWegBerechnenGeschw','Berechne Weg Bei Beschl. mit vorg. Geschw.'),('beschlWegBerechnenbel','Berechne Weg Bei Beschl. mit vorg. Bel.'),('atomErkennenEinfach','Atom bestimmen Einfach'),('atomErkennen','Atom bestimmen'),('atomZeichnen','Atom zeichnen'),('atomIonErkennen','Ion bestimmen'),('erzeugeAlleAtome','Schreibe alle Atome in pdf-Dateien'),('bestimmeZerfall','Zerfall Bestimmen'),('bestimmeZerfalln3','Zerfall Bestimmen mit 3')]
    }
    if gebeListeZurueck:
        return listeRechnungen
    if auswahl in listeRechnungen.keys():
        return listeRechnungen[auswahl]
    else:
        if auswahl=='keys':
            return list(listeRechnungen.keys())
        else:
            return []
